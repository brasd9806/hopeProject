<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="activityreportMapper">
	
	<!-- 활동보고서 리스트 -->
	<select id="selectListCount" resultType="int">
		SELECT COUNT(*)
		FROM ACTIVITY_REPORT
		
	</select>
	
	<select id="reportList" parameterType="hashMap" resultType="activityreport">
		SELECT PROGRAM_NO, PROGRAM_ACTIVITY_START_DATE, PROGRAM_ACTIVITY_END_DATE, a.CREATE_DATE AS CREATE_DATE,
		       ACTIVITY_TIME, ACTIVITY_DAYS, ACTIVITY_LOCATION, PROGRAM_CAPACITY,
		       (SELECT COUNT(*) FROM REQUEST R WHERE R.PROGRAM_NO = P.PROGRAM_NO) AS REQUEST_TOTAL,
		       REPORT_NO, REPORT_TITLE, REPORT_CONTENT, REF_ANO
		FROM PROGRAM p
		INNER JOIN ACTIVITY_REPORT a ON REF_ANO = PROGRAM_NO
		WHERE a.REPORT_TYPE = 'P' AND p.REPORT_TYPE='Y' AND a.STATUS = 'Y'
		ORDER BY REPORT_NO DESC
	</select>
	
	<!-- 활동보고서 상세 -->
	<select id="selectActivityReport" parameterType="int" resultType="activityreport">
		SELECT PROGRAM_NO, PROGRAM_ACTIVITY_START_DATE, PROGRAM_ACTIVITY_END_DATE, a.CREATE_DATE AS CREATE_DATE,
			   ACTIVITY_TIME, ACTIVITY_DAYS, ACTIVITY_LOCATION, PROGRAM_CAPACITY,
			   (SELECT COUNT(*) FROM REQUEST R WHERE R.PROGRAM_NO = P.PROGRAM_NO) AS REQUEST_TOTAL,
		       REPORT_NO, REPORT_TITLE, REPORT_CONTENT, REF_ANO
		FROM PROGRAM p
		INNER JOIN ACTIVITY_REPORT a ON REF_ANO = PROGRAM_NO
		WHERE REPORT_NO = #{reportNo} AND a.REPORT_TYPE = 'P' AND p.REPORT_TYPE='Y' AND a.STATUS = 'Y'
	</select>
	
	<select id="increaseCount" >
		UPDATE ACTIVITY_REPORT
		SET COUNT = COUNT+1
		WHERE REPORT_NO = #{reportNo}
	</select>
	
	<!-- 활동보고서 등록 -->
	<insert id="insertActivityReport" parameterType="activityreport">
		INSERT INTO ACTIVITY_REPORT
		(REPORT_NO, REPORT_TITLE, REPORT_CONTENT, CREATE_DATE, STATUS, REPORT_TYPE, REF_ANO)
		VALUES
		(SEQ_AREPORTNO.nextval, #{reportTitle}, #{reportContent}, SYSDATE, 'Y', 'P', #{refAno})
	</insert>
	
	<!-- 활동보고서 수정 -->
	<update id="updateActivityReport" parameterType="activityreport">
		UPDATE ACTIVITY_REPORT
		SET
		REPORT_TITLE = #{reportTitle},
		REPORT_CONTENT = #{reportContent}
		WHERE REPORT_NO = #{reportNo} AND REPORT_TYPE = 'P'
	</update>
	
	<!-- 활동보고서 삭제 -->	
	<update id="deleteActivityReport" parameterType="int">
		UPDATE ACTIVITY_REPORT
		SET
		STATUS = 'N'
		WHERE REPORT_NO = #{reportNo}
	</update>
	
	<!-- 봉사활동 불러오기 -->
	<select id="selectProgramReport" resultType="program">
		SELECT 
		    PROGRAM_NO, 
		    PROGRAM_NAME, 
		    TO_CHAR(PROGRAM_ACTIVITY_START_DATE, 'YYYY-MM-DD') AS PROGRAM_ACTIVITY_START_DATE, 
		    TO_CHAR(PROGRAM_ACTIVITY_END_DATE, 'YYYY-MM-DD') AS PROGRAM_ACTIVITY_END_DATE, 
		    ACTIVITY_LOCATION,
		    PROGRAM_CAPACITY,
		    ACTIVITY_TIME, 
		    ACTIVITY_DAYS,
		    (SELECT COUNT(*) FROM REQUEST R WHERE R.PROGRAM_NO = P.PROGRAM_NO) AS REQUEST_TOTAL
		FROM 
		    PROGRAM P
		WHERE 
		    P.STATUS = 'Y' AND REPORT_TYPE = 'N'
		    AND P.PROGRAM_ACTIVITY_END_DATE &lt; SYSDATE 
		    AND TRUNC(P.PROGRAM_ACTIVITY_END_DATE) &lt;&gt; TRUNC(SYSDATE) AND PROGRAM_NO = #{programNo}
	</select>
	
	<!-- 봉사활동 활동보고서 작성여부 'Y'로 변경 -->
	<update id="updateProgramReport" parameterType="int">
		UPDATE PROGRAM
		SET
		REPORT_TYPE = 'Y'
		WHERE PROGRAM_NO = #{programNo}
	</update>
	
	<!-- =============================================== 후원후기 ============================================== -->
	
	<!-- 후원 후기 종료 가져오기 -->
	<select id="selectDonateReport" resultType="donate">
		SELECT 
		    SUM_DONATE, 
		    DONATE_HOPE, 
		    DONATE_NO, 
		    ACH_RATE, 
		    DONATE_FOUNDATION, 
		    COUNT, 
		    DONATE_START_DATE, 
		    DONATE_END_DATE, 
		    TOTAL_COUNT,
		    CHANGE_NAME,
		    FILE_NO
		FROM (
		    SELECT 
		        SUM(DONATE_AMOUNT) AS SUM_DONATE, 
		        d.DONATE_HOPE, 
		        d.DONATE_NO, 
		        d.DONATE_TITLE,  
		        d.DONATE_FOUNDATION, 
		        DONATE_END_DATE, 
		        DONATE_START_DATE,
		        d.TAG_ID,
		        d.DONATE_CREATE_DATE, 
		        d.COUNT,  
		        COUNT(i.DONATE_NO) AS TOTAL_COUNT,
		        ABS(TRUNC(DONATE_END_DATE) - TRUNC(SYSDATE)) AS CEIL_DAY_DIFF,
		        SUM(DONATE_AMOUNT) / d.DONATE_HOPE * 100 AS ACH_RATE,
		        t.TAG_NAME
		    FROM 
		        DONATE_BOARD d
		    LEFT JOIN 
		        DONATE_INFO i ON d.DONATE_NO = i.DONATE_NO
		    LEFT JOIN 
		        DONATE_TAG t ON d.TAG_ID = t.TAG_ID
		    WHERE 
		        STATUS = 'Y' 
                AND DONATE_END_DATE &lt; SYSDATE AND TRUNC(DONATE_END_DATE) &lt;&gt; TRUNC(SYSDATE)
                AND d.DONATE_NO = #{donateNo}
		    GROUP BY 
		        d.DONATE_HOPE, 
		        d.DONATE_NO, 
		        d.DONATE_TITLE, 
		        d.TAG_ID, 
		        d.DONATE_FOUNDATION, 
		        DONATE_END_DATE, 
		        DONATE_START_DATE, 
		        d.DONATE_CREATE_DATE, 
		        d.COUNT, 
		        t.TAG_NAME
		) 
		LEFT JOIN (
		    SELECT DONATE_CONTENT, DONATE_NO AS DNO
		    FROM DONATE_BOARD
		) ON DONATE_NO = DNO
		LEFT JOIN (
		    SELECT ORIGIN_NAME, CHANGE_NAME, REF_FNO, FILE_NO
		    FROM ATTACHMENT
		)ON DONATE_NO = REF_FNO
	</select>
	
	<!-- 후원후기 보고서 작성 -->
	<insert id="activityInsertDonateForm">
		INSERT INTO ACTIVITY_REPORT
		(REPORT_NO, REPORT_TITLE, REPORT_CONTENT, CREATE_DATE, STATUS, REPORT_TYPE, REF_ANO)
		VALUES
		(SEQ_AREPORTNO.nextval, #{reportTitle}, #{reportContent}, SYSDATE, 'Y', 'D', #{refAno})
	</insert>
	
	<!-- 후원게시판 활동보고서 작성여부 Y로 변경 -->
	<update id="updateDonateReport">
		UPDATE DONATE_BOARD
		SET
		REPORT_STATUS = 'Y'
		WHERE DONATE_NO = #{donateNo}
	</update>
	
	<!-- 후원후기 보고서 리스트 -->
	<select id="reportDonateList" parameterType="hashMap" resultType="activityreport">
		SELECT 
		    SUM_DONATE, 
		    DONATE_HOPE, 
		    DONATE_NO, 
		    ACH_RATE, 
		    DONATE_FOUNDATION, 
		    COUNT, 
		    DONATE_START_DATE, 
		    DONATE_END_DATE, 
		    TOTAL_COUNT,
		    CHANGE_NAME,
		    FILE_NO,
            REPORT_NO,
            REPORT_TITLE,
            REPORT_CONTENT,
            CREATE_DATE
		FROM (
		    SELECT 
		        SUM(DONATE_AMOUNT) AS SUM_DONATE, 
		        d.DONATE_HOPE, 
		        d.DONATE_NO, 
		        d.DONATE_TITLE,  
		        d.DONATE_FOUNDATION, 
		        DONATE_END_DATE, 
		        DONATE_START_DATE,
		        d.TAG_ID,
		        d.DONATE_CREATE_DATE, 
		        d.COUNT,  
		        COUNT(i.DONATE_NO) AS TOTAL_COUNT,
		        ABS(TRUNC(DONATE_END_DATE) - TRUNC(SYSDATE)) AS CEIL_DAY_DIFF,
		        SUM(DONATE_AMOUNT) / d.DONATE_HOPE * 100 AS ACH_RATE,
		        t.TAG_NAME
		    FROM 
		        DONATE_BOARD d
		    LEFT JOIN 
		        DONATE_INFO i ON d.DONATE_NO = i.DONATE_NO
		    LEFT JOIN 
		        DONATE_TAG t ON d.TAG_ID = t.TAG_ID
		    WHERE 
		        STATUS = 'Y' 
                AND DONATE_END_DATE &lt; SYSDATE AND TRUNC(DONATE_END_DATE) &lt;&gt; TRUNC(SYSDATE)
		    GROUP BY 
		        d.DONATE_HOPE, 
		        d.DONATE_NO, 
		        d.DONATE_TITLE, 
		        d.TAG_ID, 
		        d.DONATE_FOUNDATION, 
		        DONATE_END_DATE, 
		        DONATE_START_DATE, 
		        d.DONATE_CREATE_DATE, 
		        d.COUNT, 
		        t.TAG_NAME
		) 
		LEFT JOIN (
		    SELECT DONATE_CONTENT, DONATE_NO AS DNO
		    FROM DONATE_BOARD
		) ON DONATE_NO = DNO
		LEFT JOIN (
		    SELECT ORIGIN_NAME, CHANGE_NAME, REF_FNO, FILE_NO
		    FROM ATTACHMENT
		)ON DONATE_NO = REF_FNO
        LEFT JOIN (
            SELECT REPORT_NO, REPORT_TITLE, REPORT_CONTENT, REF_ANO, REPORT_TYPE, STATUS, CREATE_DATE
            FROM ACTIVITY_REPORT
            WHERE STATUS = 'Y'
        )ON DONATE_NO = REF_ANO 
        WHERE REPORT_TYPE= 'D' AND REF_ANO = DONATE_NO AND STATUS = 'Y'
        ORDER BY REPORT_NO DESC
	</select>
	
	<select id="selectActivityDonateReport" parameterType="int" resultType="activityreport">
				SELECT 
		    SUM_DONATE, 
		    DONATE_HOPE, 
		    DONATE_NO, 
		    ACH_RATE, 
		    DONATE_FOUNDATION, 
		    COUNT, 
		    DONATE_START_DATE, 
		    DONATE_END_DATE, 
		    TOTAL_COUNT,
		    CHANGE_NAME,
		    FILE_NO,
            REPORT_NO,
            REPORT_TITLE,
            REPORT_CONTENT
		FROM (
		    SELECT 
		        SUM(DONATE_AMOUNT) AS SUM_DONATE, 
		        d.DONATE_HOPE, 
		        d.DONATE_NO, 
		        d.DONATE_TITLE,  
		        d.DONATE_FOUNDATION, 
		        DONATE_END_DATE, 
		        DONATE_START_DATE,
		        d.TAG_ID,
		        d.DONATE_CREATE_DATE, 
		        d.COUNT,  
		        COUNT(i.DONATE_NO) AS TOTAL_COUNT,
		        ABS(TRUNC(DONATE_END_DATE) - TRUNC(SYSDATE)) AS CEIL_DAY_DIFF,
		        SUM(DONATE_AMOUNT) / d.DONATE_HOPE * 100 AS ACH_RATE,
		        t.TAG_NAME
		    FROM 
		        DONATE_BOARD d
		    LEFT JOIN 
		        DONATE_INFO i ON d.DONATE_NO = i.DONATE_NO
		    LEFT JOIN 
		        DONATE_TAG t ON d.TAG_ID = t.TAG_ID
		    WHERE 
		        STATUS = 'Y' 
                AND DONATE_END_DATE &lt; SYSDATE AND TRUNC(DONATE_END_DATE) &lt;&gt; TRUNC(SYSDATE)
		    GROUP BY 
		        d.DONATE_HOPE, 
		        d.DONATE_NO, 
		        d.DONATE_TITLE, 
		        d.TAG_ID, 
		        d.DONATE_FOUNDATION, 
		        DONATE_END_DATE, 
		        DONATE_START_DATE, 
		        d.DONATE_CREATE_DATE, 
		        d.COUNT, 
		        t.TAG_NAME
		) 
		LEFT JOIN (
		    SELECT DONATE_CONTENT, DONATE_NO AS DNO
		    FROM DONATE_BOARD
		) ON DONATE_NO = DNO
		LEFT JOIN (
		    SELECT ORIGIN_NAME, CHANGE_NAME, REF_FNO, FILE_NO
		    FROM ATTACHMENT
		)ON DONATE_NO = REF_FNO
        LEFT JOIN (
            SELECT REPORT_NO, REPORT_TITLE, REPORT_CONTENT, REF_ANO, REPORT_TYPE
            FROM ACTIVITY_REPORT
            
        )ON DONATE_NO = REF_ANO
        WHERE REPORT_TYPE= 'D' AND REF_ANO = DONATE_NO AND REPORT_NO = #{reportNo}
	</select>
	
	<!-- 후원후기 보고서 수정 -->
	<update id="activityReportDonateUpdate" >
		UPDATE ACTIVITY_REPORT
		SET
		REPORT_TITLE = #{reportTitle},
		REPORT_CONTENT = #{reportContent}
		WHERE REPORT_NO = #{reportNo} AND REPORT_TYPE = 'D'
	</update>
	
	<!-- 후원후기 보고서 삭제 -->
	<update id="deleteDonateActivityreport" parameterType="int" >
		UPDATE ACTIVITY_REPORT
		SET
		STATUS = 'N'
		WHERE REPORT_NO = #{reportNo} AND REPORT_TYPE = 'D'
	</update>

</mapper>