<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >



<mapper namespace="adminMapper">

<!--  ===================================== 회원 시작 ================================================ -->
	<!-- 사용자 조회 -->
	<select id="selectAllUser" resultType="user">
		SELECT * 
		FROM USERS
		WHERE STATUS = 'Y'
		ORDER BY LOGIN_TYPE 
	</select>
	
	<!-- 사용자 삭제 -->
	<update id="deleteUser" parameterType="user">
	    UPDATE USERS
	    SET STATUS = 'N'
	    
	    	WHERE USER_NO = #{userNo}
	</update>
	
	<!-- 블랙리스트 삽입 -->
	<insert id="blackListInsert" parameterType="blackList">
		INSERT INTO BLACKLIST
		VALUES (
				SEQ_BLACKNO.NEXTVAL,
				#{reason},
				SYSDATE,
				#{userNo},
				SYSDATE,
				'N'
		)
	</insert>
	
	<!-- 회원정보 확인 -->
	<select id="getUserOne" resultType="user">
		SELECT *
		FROM USERS
			WHERE USER_NO = #{userNo}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="updateUserInfo" parameterType="user"> 
		UPDATE USERS
		SET USER_NAME = #{userName},
			 PHONE = #{phone}, 
			 ADDRESS = #{address}
			WHERE USER_NO = #{userNo}
	</update>
	
	<!-- 이름검색 -->
	<select id="searchUserByName" resultType="user">
		SELECT *
		FROM USERS
		WHERE USER_NAME like '%${userName}%'
		AND STATUS = 'Y'
	</select>
	
	<!-- 블랙리스트 조회 -->
	<select id="blackListView" resultType="blackList">
		SELECT * 
		FROM BLACKLIST
		WHERE STATUS = 'N'
	</select>
	
	<!-- USERS 테이블 회원 정지 풀기 -->
	<update id="releseStop" parameterType="user">
		UPDATE USERS
		SET STATUS = 'Y'
			WHERE USER_NO = #{userNo}
	</update>
	
	<!-- BLACKLIST 테이블 회원 정지 풀기 -->
	<update id="modifyUserStop" parameterType="blackList">
		UPDATE BLACKLIST
		SET STATUS = 'Y'
			WHERE USER_NO = #{userNo}
	</update>
	
	
	<!-- 블랙리스트 회원번호 검색 -->
	<select id="searchByUserNo" resultType="blackList">
		SELECT *
		FROM BLACKLIST
			WHERE USER_NO = #{userNo}
			 AND STATUS = 'N'
	</select>
	
<!--  ===================================== 회원 끝 ================================================ -->
	
	
<!--  ===================================== 채팅 시작 ================================================ -->	
	
		<!-- 채팅방 목록 -->
		<select id="selectChatRoomList" resultType="chat">
			SELECT
			    CHAT_NO,
			    CHAT_TITLE,
			    USER_NAME,
			    USER_NO,
			    (SELECT COUNT(*) FROM CHAT_JOIN CRJ WHERE CRJ.CHAT_NO = CR.CHAT_NO) AS CNT
			FROM CHAT CR
			JOIN USERS USING(USER_NO)
			WHERE CR.STATUS = 'Y'
			ORDER BY CHAT_NO DESC
		</select>
		
		<!-- 채팅방 조인 조회 -->
		<select id="selectJoinList" resultType="chatJoin">
			SELECT *
		    FROM CHAT_JOIN
		</select>
		
		<!-- 채팅방 생성 -->
		<insert id="openChatRoom" parameterType="chat" useGeneratedKeys="true">
		
			INSERT INTO CHAT VALUES
			(SEQ_CHATNO.NEXTVAL, #{chatTitle} , 'Y' , #{userNo})
			
			<selectKey keyProperty="chatNo" resultType="int" order="AFTER">
				SELECT SEQ_CHATNO.CURRVAL FROM DUAL
			</selectKey>
		</insert>
		
		<!-- 사용자가 채팅방 입장 했는지 조회-->
		<select id="joinCheck" parameterType="chatJoin" resultType="int">
			SELECT
				COUNT(*)
			FROM CHAT_JOIN
			WHERE CHAT_NO = #{chatNo} 
				AND USER_NO = #{userNo}
				AND STATUS = 'Y'
		</select>
		
		<!-- 처음 참가한 사용자는 insert -->
		<insert id="joinChatRoom" parameterType="chatJoin">
			INSERT INTO CHAT_JOIN
			VALUES(#{userNo}, #{chatNo}, 'Y')
		</insert>
		
		<!-- 이미 참가했던 사용자는 메세지만 select -->
		<select id="selectChatMessage" parameterType="int" resultType="chatMessage">
		    SELECT
		        CM.MESSAGE,
		        TO_CHAR(CM.CREATE_DATE, 'YYYY-MM-DD HH24:MI') AS CREATE_DATE,
		        U.USER_NAME,
		        U.USER_NO,
		        CM.CM_NO,
		        CH.CHAT_TITLE
		    FROM CHAT_MESSAGE CM
		    JOIN USERS U ON CM.USER_NO = U.USER_NO
		    JOIN CHAT CH ON CM.CHAT_NO = CH.CHAT_NO
		    WHERE CM.CHAT_NO = #{chatNo}
		    ORDER BY CM.CM_NO
		</select>

		<!-- chat 채팅방 삭제 -->
		<update id="deleteChat" parameterType="chat">
			UPDATE CHAT
			SET STATUS = 'N'
			WHERE USER_NO = #{userNo}
			 AND CHAT_NO = #{chatNo}
		</update>
		
		<!-- chatJoin 채팅방 삭제  -->
		<update id="deleteUserChat" parameterType="chatJoin">
			UPDATE CHAT_JOIN
			SET STATUS = 'N'
			WHERE USER_NO = #{userNo}
			 AND CHAT_NO = #{chatNo}
		</update>
		
		<!-- 채팅방 제목 검색 -->
		<select id="chatByName" resultType="chat">
			SELECT *
			FROM CHAT
				WHERE CHAT_TITLE like '%${chatTitle}%'
		</select>
			
			
		
		

<!--  ===================================== 채팅 끝 ================================================ -->


<!--  ===================================== 대시보드 통계 시작 ================================================== -->
		
		<!-- 회원 리스트 카운트 -->
		<select id="dashboardUser" resultType="user">
			SELECT COUNT(*) AS totalUsers
			FROM USERS
				WHERE STATUS = 'Y'
		</select>
		
		<!-- 후원금액 총 합계 -->
		<select id="dashboardAmount" resultType="int">
		    SELECT SUM(DONATE_AMOUNT) AS totalAmount
		    FROM DONATE_INFO
		</select>
		
		<!-- 게시글 수 합계 -->
		<select id="dashboardTotalBoardCount" resultType="int">
			SELECT COUNT(*) AS totalBoard
			FROM BOARD
				WHERE STATUS = 'Y'
		</select>
		
		<!-- 채팅방 수 합계 -->
		<select id="dashboardChatTotalCount" resultType="int">
			SELECT COUNT(*) AS totalChat
			FROM CHAT
				WHERE STATUS = 'Y'
		</select>
	
<!--  ===================================== 대시보드 통계 끝 ================================================== -->


</mapper>